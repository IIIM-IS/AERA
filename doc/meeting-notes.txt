2020-01-05
* DONE? Solve real-time pong.2.goal crash.
  PrimaryMDLController::predict:1430
  PrimaryMDLController::assume_lhs:2113
  CTPX::build_requirement:996
  HLPOverlay::check_fwd_timings:180
  (ModelBase::MEntry::ComputeHashCode:135) Trigger with pong.discrete.cmd.external, cst_y2_minus with grab_hand
  BindingMap::match_fwd_timing:738
* DONE. Fix https://github.com/IIIM-IS/replicode/issues/42
* DONE. decompiled_objects "fact10" is different than fact with OID 10 in the trace.
  https://github.com/IIIM-IS/replicode/pull/44
* DONE. Try temporarily disabling assumptions. PrimaryMDLController::assume:2080
* DONE. pong.discrete.cmd.external: Why does m_y0_plus prediction fail?
  InputLessPGMOverlay::inject_productions:459 injects a (fact (cmd) ...) of zero duration.
  This is used as input to cst_y2_minus instead of the one injected by pgm_cmd_move_y_minus.
  BindingMap::match_timings:712 reduces (fact (icst cst_y2_minus)) to zero duration to match it.
  This makes the (fact (imdl m_y2_minus)) zero duration also.
  Therefore the prediction from the RHS of the model is also zero duration.
    (fact (pred (fact (mk.val p1 position y1 :) 0s:600ms:0us 0s:600ms:0us) ::) ::)
  The PMonitor calls _Fact::match_timings_overlap which fails if no overlap.
  Possible solutions:
    * NO: Make mdl ignore LHS duration and predict RHS with explicit duration. (Requires changing pattern extractor)
    * NO: Make inject_productions offset the instantaneous (fact (cmd ...)) into the future.
    * YES: Make inject_productions give (fact (cmd ...)) a duration.
    * NO: Move responsibility to inject (fact (cmd ...)) from inject_productions to the external environment.
    * NO: In _Fact::match_timings_overlap, special case when one interval is zero duration.
* DONE. Is the failed prediction from the assumption shielded from decreasing mdl confidence? No.

2020-01-09
* DONE. In replicode repository, create doc/meeting-notes.txt
* DONE. Add settings parameter "enable_assumptions". https://github.com/IIIM-IS/replicode/pull/45
* DONE. pong.discrete.cmd.external: From the drive, why doesn't m_y1_plus abduce goals for icst cst_y1_plus?
  Feb 2012: Major update to CSTController::reduce
  https://github.com/IIIM-IS/replicode/commit/3c5b9be5f935d6783fb1d35d74ca7d19ad4be186#diff-0ff725f0ae881cefbad0064fc2eac950R236
  Changed:
    Code *target = goal->get_reference(0)->get_reference(0);
    if (target->code(0).asOpcode() == Opcodes::ICST ...
  to:
    _Fact *goal_target=goal->get_reference(0);
    if (goal_target->code(0).asOpcode() == Opcodes::ICst ...
  There is a missing get_reference(0), so it never matches.
  Also, the following is clearly a bug, using the uninitialized bm:
    P<BindingMap> bm = new BindingMap(bm);
  Thus, the code to create goals from an abduced icst never ran after Feb 2012.
* DONE. HLPBindingMap::init_from_f_ihlp:1011 Fix to get the time stamp structure.
  https://github.com/IIIM-IS/replicode/pull/46
* Need CSTController::inject_goal:449 new View saliency 9999
  How does AERA choose among possible actions?

2020-01-17
* DONE. Make a pull request for the fix to CSTController::reduce. Merged.
  https://github.com/IIIM-IS/replicode/pull/47
* DONE. What was CSTController::inject_goal:449 resilience before the "big commmit" Feb 2012?
  There is code to compute the resilience, but seems to always use 1.
  https://github.com/IIIM-IS/replicode/blob/8260dc91c441c5b586663332741bd85242f3d2d9/r_exec/cst_controller.cpp#L92
  Should we try to use the duration until the goal's fact time stamp?
* DONE. In drive for y1 200ms later, why does it also eject cmd move_y_minus?
  Because extra move commands are ignored, but registered anyway, did a model learn wrongly from that? NO.
  The goal for (mk.val p1 position y1) also matches m_y2_minus, and cst_y2_minus
    abduces the goal (cmd move_y_minus [p1] :), even though position is not y2.
* DONE. Is replicode now making simulations?
  NO. In settings.xml, min_sim_time_horizon==max_sim_time_horizon==0.
  Will change max_sim_time_horizon.
* pong.2.goal.replicode model building.
  ASTController<U>::ASTController:89 target is the premise, i.e. the tpx' target to be "defeated".
  Fix typo in comment: https://github.com/IIIM-IS/replicode/commit/cde840d45a73c2826f7564d8a41b2732ed2ea88f
  CTPX::find_guard_builder "5 forms"
  InputLessPGMOverlay::inject_productions:461 Add GetTimeTolerance or use SYNC_HOLD so it can be a cause.

2020-01-21
* DONE pong.2.goal.replicode: Why does it need the initial speed_y?
  Because the patterns extractor CTPX::reduce needs a "cause", and this is the only fact available.
* CTPX::reduce: Discard inputs that don't share values with the consequent OR target.
  https://github.com/IIIM-IS/replicode/pull/48

2020-01-28
* DONE. Added "glue" output, e.g.
  fact (4652) imdl mdl 106 matches evidence fact (3962) imdl mdl 106
* Wrong: fact_130:(fact (icst cst_105 |[] [p1 y1 y1]) 0s:600ms:0us 0s:700ms:0us)
  Starts from consequent (fact y1_is_a_discrete_position1 0s:600ms:0us 0s:700ms:0us)

2020-01-31
* DONE. Finish gotcha: Documentation omits the 1 at the end of every object definition.
* CSTController::reduce:380 should ++o ? https://github.com/IIIM-IS/replicode/commit/fc5961a4fa9f44d40298381bbdf86f314a9f26ab#diff-0ff725f0ae881cefbad0064fc2eac950R318
* DONE: pong.discrete.cmd.external: When adding fact 119 to fact_127, why is patterns already down to 2 used members?
    Because CSTOverlay::get_offspring transfers(?) from patterns to inputs.
  When building fact 113 icst[96][ 102 108 109 111], why does it use all 4 inputs?
    Because it comes from CSTOverlay(1331) which was never an offspring.
    Why no prediction? Because job 466 deletes model 98, so fact_113 is not used.

2020-02-07
* DONE. Create pull request for CSTController::reduce:380 should ++o
  https://github.com/IIIM-IS/replicode/pull/49
* DEFER. Does replicode v1.1 instantiate a cst from partial inputs?
  Don't know. The code is too different, and can't find tests that use pattern extractor.
* DONE. Make pong.discrete.cmd.external build the same models in diagnostic time.
  CSTOverlay::reduce:277 if (inputs.size() == original_patterns_size) inject_production();
  Almost: mdl 122 makes unbound predictions, e.g. fact_171
* Does pong.discrete.cmd.external use the learned models to abduce from the drive?
  NO. PrimaryMDLController::abduce:1609 abduction_allowed(bm) == false
  Maybe partly due to the bug in scan_variable: https://github.com/IIIM-IS/replicode/pull/50

2020-02-13
* DONE. Opened tech report errata issue https://github.com/IIIM-IS/replicode/issues/54
* DONE. Merged pull request https://github.com/IIIM-IS/replicode/pull/50 .
* DONE. Review and merge https://github.com/IIIM-IS/replicode/pull/52 .
* DONE. Set max_sim_time_horizon to 5000000 us. See how behavior changes.
  ANSWER: Not much change. E.g. fact_558 goal imdl injected just the same.
* DONE. Review and merge https://github.com/IIIM-IS/replicode/pull/53 .
* DONE. In hand-coded model, why doesn't it (goal (fact (imdl)))?
  PrimaryMDLController::abduce:1636 retrieve_imdl_bwd returns NO_R (no requirements)
    -> directly to abduce LHS
  For mdl_98 from CTPX, MDLController constructor sets _is_requirement=WR (weak requirement)
* OK. Review issue to rename for readability https://github.com/IIIM-IS/replicode/issues/55

2020-02-23
* DONE. Merge pull request for readability issue https://github.com/IIIM-IS/replicode/issues/55
* DONE. Review issue to remove unused parameter https://github.com/IIIM-IS/replicode/issues/57
* Changes in pong.discrete.cmd.external to abduce a goal from learned models:
  * Still need pull request https://github.com/IIIM-IS/replicode/pull/48
  * Still need CSTOverlay::reduce:288 to require all inputs for an icst.
  * Offset (fact (cmd)) to allow it to be a cause. https://github.com/IIIM-IS/replicode/pull/59
  * Delay the drive to allow predicting the imdl as a requirement. https://github.com/IIIM-IS/replicode/commit/3339d3a804a32d1692b993777d1da87d3035a787
  * In m_run_position, offset the timestamp of the goal position by 90000us 
    so that v2 in mdl_93 exactly matches 3s:200ms:0us in the requirement
    (imdl mdl_93 [y1 3s:100ms:0us 3s:200ms:0us] [p1 y2 v5]) .
    (Need to find a way to make this flexible.)
  * Force HLPBindingMap::match_bwd_timings to succeed.
    The requirement timestamps 3s:100ms:0us,3s:200ms:0us don't match
    the mdl_93 RHS backward timestamps 3s:200ms:0us,3s:300ms:0us .
    It works if we use the timestamps of f_pattern (the constructed imdl).
  * In HLPOverlay::check_fwd_timings:178, need to evaluate fwd_after
    "v4:(sub v2 0s:80ms:0us)" first because fwd_before 
    "v5:(add v4 0s:30ms:0us)" depends on it.
    In general, there may be dependencies among many guards, so the general solution
    needs multiple passes to bind other assignment variables that may be dependencies.
    Maybe do ScanBWDGuards first and let it bind variables?

2020-02-25
* DONE. Review/merge allowing a reference to an expression https://github.com/IIIM-IS/replicode/pull/58
* REVIEW. pong.discrete.cmd.external: Fix learned model for move_y_minus position1->position2.
  CTPX::reduce: Require each icst component to share values with the target or consequent.

2020-03-12
* DONE. pong.discrete.cmd.external: Increase to 10 positions.
* DONE. In unfixed pong.discrete.cmd.external, when the goal to achieve position y0 is not achieved,
  what does the goal monitor do?
  ANSWER: Makes |fact_845:(|fact (success fact_825 fact_832) ...)
    but no further reduction jobs process it.
* DONE. Is PTPX invoked when a prediction fails?
  ANSWER: Yes, but does nothing. PTPX::reduce needs inputs, but nothing adds them.
  Makes |fact_234:(|fact (success fact_226 fact_232) ...)
  std.replicode:166 Need to set ctpx_on true.
  settings.xml: Need to set tpx_time_horizon?
* DONE. Is GTPX invoked when drive goal succeeds?
  ANSWER: Yes, but does nothing. GTPX::reduce needs inputs, but AutoFocusController::reduce:392
    doesn't call dispatch because std.replicode:166 pass_through is true.
    Setting pass_through false: No auto focus, no learned models, no AutoFocus.goals. Still no dispatch.
* DONE. Review/merge fix for getting fwd_after_index https://github.com/IIIM-IS/replicode/pull/63
* DONE. Review/merge fix for accessing controllers array https://github.com/IIIM-IS/replicode/pull/64

2020-03-19
* DONE. MERGED. Add MDLController::retrieve_imdl_bwd use_f_pattern_timings, but don't use yet.
* DONE. MERGED. Pull request: CoreLibrary tabs to spaces https://github.com/IIIM-IS/CoreLibrary/pull/2
* DONE. Review/merge static_cast in class P https://github.com/IIIM-IS/CoreLibrary/pull/3
* DONE. Merge pull request, need to increment iterator https://github.com/IIIM-IS/replicode/pull/53
* DONE. Is GMonitor::commit called?
  ANSWER: Yes, but sim_successes is empty because store_simulated_outcome is never called. 
  * It might be called from GMonitor::reduce but only after calling get_simulation(controller),
    which I can't believe was ever tested because it would crash due to the bug reported in
    https://github.com/IIIM-IS/CoreLibrary/pull/3 .
  * FIXED. Also, the code in store_similated_outcome never adds to sim_successes.optional_solutions . 
    _GMonitor::store_simulated_outcome:112
    (Hard to believe this code was tested.)
  * FIXED. Also, GMonitor::commit:217 uses (*sol).second, not best_sol. (Copy/paste error?)
  * MAYBE NOT A PROBLEM. Also, GMonitor::commit:219 may not use sim_successes.mandatory_solutions if there is no 
    best_sol from sim_successes.optional_solutions .

2020-03-26
* DONE. Review/merge pull request for tabs to spaces https://github.com/IIIM-IS/replicode/pull/69
* DONE. In normal prediction, is there a Sim attached? Does it predict past the next sampling period? Need a drive?
  ANSWER: Apparently, no. The Pred object simulations is empty. The Sim constructor is only called when abducing from the drive.
* DONE. Review merged pull request to rename to sim_time_horizon_factor https://github.com/IIIM-IS/replicode/pull/68
* Review/merge pull request for GMonitor sim_thz https://github.com/IIIM-IS/replicode/pull/70
* More simulation issues:
  * min_sim_time_horizon is really "time allowance for the simulated predictions". PMDLController::get_sim_thz:1118
  * In get_sim_thz, Sim::thz and _GMonitor::sim_thz, "time horizon" means only abduction w/o prediction (min_sim_thz).
  * TopLevelMDLController::abduce_lhs:1228 makes Sim where sim_thz already has subtracted min_sim_thz. Then,
    PrimaryMDLController::abduce:1623 divides this by 2 and subtracts min_sim_thz again.
  * GMonitor::commit:217 bindings belongs to top model, but abduce called on another model - mismatch.

2020-04-02
* DONE. Review/merge std::chrono https://github.com/IIIM-IS/CoreLibrary/pull/5 and https://github.com/IIIM-IS/replicode/pull/71
* DONE. Review/merge pull request for GMonitor sim_thz https://github.com/IIIM-IS/replicode/pull/72
* DONE. Review/merge pull request for if (time_to_live = 0) https://github.com/IIIM-IS/replicode/pull/73
* DONE. Review/merge pull request for Sim sol_before https://github.com/IIIM-IS/replicode/pull/74
* DONE. Review/merge pull request for converting primary_thz https://github.com/IIIM-IS/replicode/pull/75

2020-04-09
* DONE. Review/merge pull requests for member variable underscores https://github.com/IIIM-IS/CoreLibrary/pull/6
  https://github.com/IIIM-IS/replicode/pull/76
  Found unused member variables: _GMonitor::sim_thz_ f_imdl_ and sim_mode_, GTPX::f_imdl_
* DONE. Review/merge pull request to rename to thz_timestamp. https://github.com/IIIM-IS/replicode/pull/77
* DONE. Look at the version of Replicode from Eric's laptop. Is it v1.2? v1.1? Or some intermediate with simulation implemented?
  Laptop "eric_workdir": v1.2 August 1, 2012 0f9b1a4d1948954bbd7f3aa4089d5a4493cc7c76
  Laptop "eric_from_home": v1.1 April 10, 2011 (more or less) 

2020-04-17
* DONE. Pull request for CTPX::reduce icst components.
* DONE. Pull request for CSTController original_patterns_size_.
* DONE. Diagnostic time for v1.1.
* DONE. Add relevant bug fixes from v1.2 to v1.1.
* v1.1 test.1.2011-04-13.v1_0.replicode: Goal for the_right_hand position:
  It generates subgoals but does not appear to be in simulation.
* DONE. Mock up an explanation session.
* DONE. Start a design specification.

2020-04-24
* DONE. Review merge pull request to fix timestamp offset https://github.com/IIIM-IS/CoreLibrary/pull/7
* DONE. Review/merge pull request to parse 1s:100us:0us timestamps https://github.com/IIIM-IS/replicode/pull/80
* DONE. Review/merge pull request for unique created names https://github.com/IIIM-IS/replicode/pull/81
* DONE. Review/merge pull request to decompile references first https://github.com/IIIM-IS/replicode/pull/82
* DONE. Review issue for decompiler VL_PTR error https://github.com/IIIM-IS/replicode/issues/51

2020-04-30
* DONE. Review/merge pull request to update Integration_OpenAI https://github.com/IIIM-IS/Integration_OpenAI/pull/4
* DONE. Review/merge pull request for "using namespace r_comp" https://github.com/IIIM-IS/replicode/pull/84
* Does the compiler prevent redefining an object using the same name?
  ANSWER: No. See the pull request:
  DONE. Review/merge pull request to check redefined labels https://github.com/IIIM-IS/replicode/pull/83
* YES. Can you switch to Visual Studio 2019?

2020-05-07
* Replicode
  * DONE. In console output, include the mk.rdx for program execution (inject).
  * DONE. In console output, include controller OID for new mdl and cst.
  * DONE. In console output, include the mk.rdx for the prediction.
* Visualizer
  * DONE. Add side window for query session. (Solves problem of fact before prediction.)

2020-05-14
* Replicode
  * DONE. In console output, log when storing an object in the cst overlay.
  * DONE. Talk about "Exposed values" for second set in imdl. Change in Replicode language spec?
* Visualizer
  * DONE. Show events at the same timestamp all at once.
  * DONE. Only show program reductions as an explanation for program outputs.
  * DONE. If a template arguments is assigned elsewhere and ignored, change it to a wildcard in Visualizer.

2020-05-22
* Replicode
  * DONE. Gotchas: If a model's guard assigns a variable, the one passed in is ignored.
  * DONE. Moved Gotchas to the README. https://github.com/IIIM-IS/replicode/blob/master/README.md#Gotchas
  * DONE. Review/merge pull request for keep_invalidated_objects https://github.com/IIIM-IS/replicode/pull/85
  * DONE. Review/merge pull request to change | to anti_ in labels https://github.com/IIIM-IS/replicode/pull/86
  * DONE. For success, output the fact success OID:
    0s:300ms:0us fact 75 -> fact 79 success fact 60 pred
* Visualizer
  * DONE. In prediction item, use "Hide iModel", and change "Original Model" to "Show Model"
  * DONE. Put an outbound arrowhead at the beginning of arrows.
  * DONE. Add creation timestamp in gray at upper-right.
  * DONE. Always highlight the LHS red and the RHS green. Include the timestamps.
  * DONE. Add dotted vertical lines and clearly separate the scene into frames.
  * DONE. Don't show a fact until the view activates it.
    For now, only showing auto focus output which correctly appears in the next frame
    (and after the prediction is made).
  
2020-05-27
* Replicode
  * DONE. Review/merge pull request for debug_stream_file_path https://github.com/IIIM-IS/replicode/pull/87
  * DONE. Log inject and eject to the debug stream.
* Visualizer
  * DONE. Split scene into panels with in-memory objects, and "timeless" models/cst.
  * DONE. For new items, change blink color to green.
  * DONE. On hover, instead of blinking, change just change the color to blue.
  * DONE. Use Visualizer with pong.2.goal. 
  * DONE. Put injected facts and ejected commands at the top.
  * DONE. Make auto focus of same mk.val line up horizontally.
    This is hacked for this example. We need a more general layout algorithm.
  * YES, OPTIONAL. Should draw an arrow from the auto focus fact to the injected fact?

2020-06-01
* Visualizer
  * DONE. Highlight connected arrows when hovering on an item.
  * DONE. When the visualizer starts, show a dialog to select the settings.xml file (with defaults).
  * DONE. Check boxes for types of items to show.
  * DONE. Base the prediction on the reduction, and mention the input cause in the explanation.
  * DONE. Add explanation for the imdl template values.
    * Include the requirement along with the input in the mdl_63 reduction marker?
    * Also need a reduction marker for mdl_64.

2020-06-04
* Replicode
  * DONE. Review/merge pull request to change prediction VL_PTR to wildcard https://github.com/IIIM-IS/replicode/pull/88
  * DONE. In settings.xml, rename TestConfiguration? YES. AERAConfiguration.
* Visualizer
  * DONE. Change "right-hand side" to RHS, same for LHS.
  * DONE. Make minimal pong seed program.
  * DONE. Fix bug for arrow to hidden item.
  * DONE. Make a version of the seed without ejecting the start command.

2020-06-09
* Replicode
  * DONE. Make branch without-pull-requests-48-59-78-79 .
  * DONE. Merge pull requests 48, 59, 78 and 79.
  * DONE. Create INSTALL.md.

2020-06-15
* Replicode
  * DONE. settings.xml: Make diagnostic the default. Add comments for using real time.
  * DONE. settings.xml: Default 1000 milliseconds.
  * DONE. settings.xml: ignore_named_objects no.
  * DONE. INSTALL.md: Document uncommenting WITH_DEBUG_OID.
  * DONE. Rename Test project to AERA.
  * DONE. Rename folders V1.1 and V1.2 to replicode_v1.1 and replicode_v1.2.
  * DONE. pong.external.replicode: Change start pgm command to (cmd ready ["pong"])
* Visualizer
  * DONE. Use the registry to remember the last settings.xml file path.

2020-06-19
* Replicode
  * DONE. Review/merge pull request to include the "ejection fact" in the program mk.rdx https://github.com/IIIM-IS/replicode/pull/89
  * DONE. Rename Test to AERA. In CHANGELOG, say how to get history.
  * DONE. Rename debug_out.txt to runtime_out.txt
  * DONE. Rename pong.external to ball.external
  * DONE. Tag a release AERA_v0.2
* Visualizer
  * DONE. Make the windows fit the user's screen.
  * DONE. Copyright headers.
  * DONE. Tag a release AERA_Visualizer_v0.2

2020-07-22
* Visualizer
  * DONE. Review/close Arni's issue for screenshot https://github.com/IIIM-IS/AERA_Visualizer/issues/1
  * DONE. Add progress window while reading runtime_out.txt.
  * DONE. Add item for Prediction Failure anti-fact.
* Replicode
  * DONE. Use OUTPUT_LINE everywhere to avoid mangling output together.
  * DONE. Real time ball.external.replicode: Predicion failure for small continuous value difference.
  * DONE. Review/merge pull request for is_alive check https://github.com/IIIM-IS/replicode/pull/93
  * DONE. Review/merge pull request to fix GMonitor SUCCESS_OBJ bug https://github.com/IIIM-IS/replicode/pull/90
  * DONE. Review/merge pull request to use a copy of the binding map in retrieve_imdl_bwd https://github.com/IIIM-IS/replicode/pull/92
  * DONE. Use ont instead of ent for discrete positions https://github.com/IIIM-IS/replicode/commit/fa69f5e1d431dbf49ef49ea611aca80ac7272aba
Simulator
  * OK. abduce_simulated_lhs: Also start forward simuation: predict_simulated_evidence

2020-07-28
* DONE. Review/merge change goal definition to (goal a-fact an-actor a-simulation). Add basic (sim mode thz). https://github.com/IIIM-IS/replicode/pull/94
* DONE. Add goal and sim changes to the errata.
* DONE. Close pull request to not take simulated goals as program input https://github.com/IIIM-IS/replicode/pull/91

2020-07-31
* DONE. Update all std.replicode to include (sim ...) definition and (goal : : sim), including Integration_OpenAI.
* DONE. Make bug issue: Uwarranted cast to (Goal*) in _Fact::get_goal(). https://github.com/IIIM-IS/replicode/issues/95

2020-08-04
* DONE. Review/merge pull request: retrieve_imdl_bwd to use match_fwd https://github.com/IIIM-IS/replicode/pull/96

2020-08-13
* DONE. Review/merge pull request: Add is_sim operator https://github.com/IIIM-IS/replicode/pull/101
* DONE. Review/merge pull request: Don't abort if chaining_allowed https://github.com/IIIM-IS/replicode/pull/102
* DONE. Review/merge pull request: Start forward chaining in the simulator https://github.com/IIIM-IS/replicode/pull/103
* NOT YET. Review/merge pull request: In abduce, use the current model controller for the new Sim https://github.com/IIIM-IS/replicode/pull/104
* Discuss issue: Predict members of simulated future composite states https://github.com/IIIM-IS/replicode/issues/97
  Try making the auto focus controller predict the same fact until the external environment contradicts it.

2020-08-25
* DONE. Rename sol to solution.
* Try simulator to re repeatedly restart the simulation from the solution under the root.
  NO. Instead, do backward chaining once, then keep the "deepest goal" during forward chaining:
  "When the abduction steps stop, predictions are simulated, i.e. they are marked with the solution markers of the goals that 
   could not be simulated (the deepest goals)."

2020-09-03
* DONE. Review/merge pull request for don't reduce sim->get_thz() in simulated backward chaining https://github.com/IIIM-IS/replicode/pull/105
* Try one command two frames later. Use a goal time interval for "now to end of goal frame"? YES

2020-09-17
* DONE. Merge pending pull requests into experimental side branch. Tell Arash and Leonard to use it.
* Visualizer: For the simulation visualizer, need:
  * DONE. need pull request for (pred) to add list of (sim). Pull request #109
  * need Sim to use model view instead of controller
    Difficult. Can we keep the controller in the C++ object, but use the model in the decompiled (sim) code?
      YES, TRY IT.

2020-09-24
* OK. Visualizer: ball.goal.external has drive to set position by changing speed - a simple simulation.
* PTPX: What is "pass through"? It prevents auto focus from remembering inputs needed for PTPX.
  -> Don't know what "pass through" is. Presumably an optimization. Try to get AERA to work without it.

2020-10-01
* OK. Visualizer: initial simulator - overlay on main timeline.
* DONE. Review/merge pull request for list of sims in (pred) https://github.com/IIIM-IS/replicode/pull/109
* DONE. Review/merge pull request for full (sim) syntax https://github.com/IIIM-IS/replicode/pull/117

2020-10-08
* DONE. Rename speed to velocity.
* DONE. Why doesn't the PTPX see the (cmd) which made the position prediction fail?
    PTPX::reduce:666 if (i->input_ == Opcodes::Cmd) // no cmds as req lhs (because no bwd-operational); prefer: cmd->effect, effect->imdl.
    TRY COMMENTING OUT.
* Try to get AERA to work without "pass through".
  "Pass through" is to avoid the autofocus requirement for "relevance" to goals or predictions, without relevance no
  auto focus for the pattern extractor. What is the best way to learn patterns when no existing goals or predictions?

2020-10-22
* DONE. Review/merge pull request: Keep the same abduced sim object in forward simulation. https://github.com/IIIM-IS/replicode/pull/98
* OK. Try integer positions. It should learn models like position n to n+1, and an exception at end-of-travel.
  Hand-coded exception model works: The main model is not killed for failing. (Needed to offset babbling command.)
* Models from PTPX don't seem to use specific facts which caused the failure. Basic question of general vs. specific models.

2020-12-03
* DONE. In runtime_out, change "environment" to "I/O device"
* DONE. Review/merge pull request for all combinations of CSTOverlay https://github.com/IIIM-IS/replicode/pull/127

2020-12-23
* Simulator: Avoiding loops.
  * If there is a goal for (mk.val c position 1), should quit if a subgoal (mk.val c position 2)?
  * Subtler for (icst S0 |[] [h s]) and (icst S0 |[] [h c]). Not obvious if conflicting.
    (cst |[] []
       (fact (mk.val h essence hand :) T0: T1: : :)
       (fact (mk.val h attached s :) T0: T1: : :)
    (cst |[] []
       (fact (mk.val h essence hand :) T0: T1: : :)
       (fact (mk.val h attached c :) T0: T1: : :)

    But could mean non-conflicting:
    (cst |[] []
       (fact (mk.val h essence hand :) T0: T1: : :)
       (fact (mk.val s attached h :) T0: T1: : :)
    (cst |[] []
       (fact (mk.val h essence hand :) T0: T1: : :)
       (fact (mk.val c attached h :) T0: T1: : :)

2020-12-30
* DONE. Make the AGI summer school example work in series.
* TESTING. For a goal for a member of a composite state, make a goal for the icst.

2021-01-07
* DONE. Review/merge pull request for GMonitor::commit() calling abduce_no_simulation https://github.com/IIIM-IS/replicode/pull/114
* DONE. Make pull request: If a fact is declared as AXIOM in the seed, don't make a goal for it. https://github.com/IIIM-IS/replicode/pull/130
* DONE. Review/merge pull request for is_out_of_range(now) in retrieve_simulated_imdl_fwd https://github.com/IIIM-IS/replicode/pull/113
* Summer school example
  * We got lucky the first few times. We only predict (cmd move [h -25]), then predict (mk.val s position 15) without simulating grabbing s?
  * Need to simulate future change of many state variables (not just one like paddle position).

2021-01-14
* Investigate when need to set the "weak requirement enabled" flag.
   * The code says, "wr_enabled: true if there is at least one wr stronger than at least one sr." Yet many places set 
     wr_enabled when there are no strong requirements.
   * The code modifies the wr_enabled flags of existing (imdl ...) objects. This is one of the few cases where the objects are
     not immutable. Maybe it makes sense to modify an existing object if it is only used in one processing path, but the simulator
     has many processing paths. So, it might not make sense to modify an object sharded among different simulator paths.
     Pull request to ignore wr_enabled when matching in the simulator https://github.com/IIIM-IS/replicode/pull/132
* How does an AERA agent make hypotheses about essence facts? (avoid https://github.com/IIIM-IS/replicode/pull/112)
  TRY. New proposal for using CSTOverlay in https://github.com/IIIM-IS/replicode/issues/97 .

2021-01-28
* DONE. Implement new proposal for using CSTOverlay in https://github.com/IIIM-IS/replicode/issues/97
  * OK. (After these changes, confirmed that the "cart pole" and "discrete paddle positions" examples still work.)
  * DONE. Review/merge pull request for adding to CSTOverlay's list of Sim https://github.com/IIIM-IS/replicode/pull/134

2021-02-04
* DONE. Review/merge pull request for registerGoalTarget in simulated backward chaining https://github.com/IIIM-IS/replicode/pull/108
* DONE. Review/merge pull request For a goal for a member of a composite state, make a goal for the icst. https://github.com/IIIM-IS/replicode/pull/131
* Create issue for non-exact match of template timings (ti T1 T2).
    DONE. https://github.com/IIIM-IS/replicode/issues/137

2021-02-11
* DONE. AGI example move command has limited distance (different efferent copy).
  * Added min/max operators.

2021-02-25
* DONE. Review/merge pull request to log the predicted success object https://github.com/IIIM-IS/replicode/pull/140

2021-03-04
* DONE. Visualizer: Reverse arrow direction.
* DONE. Visualizer: Goal item default position on the right of the time interval.
* DONE: Vizualizer: Add "Reset Position".
* DONE: Vizualizer: Always put the timestamps at the top of the screen.
* Strong requirement: Tried (fact (mk.val h gripper_power false) -> (|fact (mk.val s position P1:)
  * Simulator does have a MANDATORY branch, but I don't see how it creates a solution.
    TRY: Using (|fact (imdl)) as the right hand side and see if this can be used to create the mandatory solution.

2021-03-18
* DONE. Move injectFact, etc. into base class as injectFaceFromIoDevice, etc.
* DONE. Rename AGI summer school to "hand-grab-sphere"
* Investigate simulation with anti goals.
  TODO: Can/should AERA start simulating from a non-simulated (and non drive) goal? This includes anti-goals.
* DONE. Review/merge pull request to fix boolean guards https://github.com/IIIM-IS/replicode/pull/144

2021-03-25
* Can AERA start simulating from a non-simulated (and non drive) goal?
  NO. Inject: (fact (goal (fact (mk.val h position 0)))
    PrimaryMDLController::reduce:1655 if (!goal->is_drive())
  Simulations are started by TopLevelMDLController. Only by models with a RHS drive.
    MDLController::New:285 if (rhs->get_reference(0)->code(0).asOpcode() == Opcodes::Ent)

2021-04-08
* DONE. Rename milestone to diag_mode_rel_0_1
* DONE. Visualizer: On step, show non-simulation items, then simulation items on next step.
* DONE. Visualizer: On step to new frame, remove simulation from previous frame.
* DONE: Visualizer: Make anti-facts red.
* TRY copy/paste code to check references to fix: Using = in guard of composite state of model https://github.com/IIIM-IS/replicode/issues/133
  I spent some time on this but it is not a simple copy/paste. I need to dig into how IPGMContext actually does object references.
* Can AERA start simulating from a non-simulated (and non drive) goal?
  CORRECTION: YES. PrimaryMDLController::reduce:1655 if (!goal->is_drive())
    is_drive() returns false if the goal has a simulation (created by commit).
    (fact (goal (|fact (mk.val h power false) 0s:200ms:0us 0s:600ms:0us) (sim 0 0s:0ms:0us)))
    (fact (goal (fact (cmd set_state [h power true]) 0s:120ms:0us 0s:500ms:0u)))

2021-04-19
* DONE: Visaulizer: In arrows for between forward/backward chaining items, color arrow heads with read and green (when hovered)
* DONE: Visualizer: Show the drive.
* DONE. Review/merge pull request to fix  https://github.com/IIIM-IS/replicode/issues/51 Add CODE_VL_PTR and fix the decompiler https://github.com/IIIM-IS/replicode/pull/126
* DONE. Review/merge pull request to allow eject to return the actally-executed command https://github.com/IIIM-IS/replicode/pull/125
    DONE. Merge into master: https://github.com/IIIM-IS/replicode/pull/145 with https://github.com/IIIM-IS/replicode/pull/146
    DONE. Merge into master: https://github.com/IIIM-IS/replicode/pull/149
* DONE. Review/merge pull request for template timings in abduce_imdl https://github.com/IIIM-IS/replicode/pull/107

2021-04-22
* DONE. Visualizer: Show simulated predicted success.
* DONE. Visualizer: Show simulated predicted imdl (new mk.rdx).
* DONE. Still need? Review/merge pull request to inject simulated (fact (imdl ...)) in simulation https://github.com/IIIM-IS/replicode/pull/153
  YES. M7 already gave its requrement to M6. The new prediction from M0 will not cause M7 to call store_requirement on M7.
* DONE. Review/merge pull request to store the requirement before signaling the monitors https://github.com/IIIM-IS/replicode/pull/151
* DONE. Review/merge pull request to make the efferent copy timings relative to the frame https://github.com/IIIM-IS/replicode/pull/124

2021-04-29
* DONE. How close is the cart pole to overrunning object limit? https://github.com/IIIM-IS/replicode/issues/128
  With keep_invalidated_objects yes, runtime of 55 seconds stores 65272 objects.
  With keep_invalidated_objects no, runtime of 8+ minutes stores 28588 objects (slow growth because expired objects are removed).
* DONE. Visualizer: Connect predicted requirement to predicted LHS.
* DONE. Visualizer: Find "focus" simluation items by linking backwards from committed command.
* DONE. The end of simulation commit creates a new non-simulated copy of the commited goal. Show in Visualizer.
* DONE. Review/merge pull request to ignore wr_enabled when matching in the simulator https://github.com/IIIM-IS/replicode/pull/132
* DONE. Review/merge pull request for temporary fix for matching template timings https://github.com/IIIM-IS/replicode/pull/136
* Try mdl_anti_M2: Override model to grab the sphere if the cube is also there.
  DONE. Why doesn't mdl_anti_M2_c prevent commiting to (cmd grab [h])? See https://github.com/IIIM-IS/replicode/pull/157

2021-05-06
* DONE. Review/merge pull request to not abduce from anti-fact imdl https://github.com/IIIM-IS/replicode/pull/156
* DONE. Review/merge pull request to use match_fwd in retrieve_simulated_imdl_fwd https://github.com/IIIM-IS/replicode/pull/141
* DONE. Review/merge pull request for equal confidence of weak and strong requirements https://github.com/IIIM-IS/replicode/pull/157
* DONE. Visualizer: Fix: The run item is not in the focus items after unstep then step.
* DONE. In diagnostic mode, for the simulated prediction phase, wait until abudction phase is finished.
* DONE: Check if hand-grab-sphere has a simulation solution for release first (before move).
  ANSWER: Yes.
* DONE. Check if simulated anti-requirement (fact (pred (|fact (imdl)))) stop a simulation branch.
  ANSWER. No. PrimaryMDLController::store_requirement only stores anti-requirement for non-simulation.
  Check if anti-goal (|fact (imdl M0 [h 25 0s:0ms:0us 0s:400ms:0us] [v5: 0 0s:100ms:0us 0s:500ms:0us])) prevents moving hand.
  ANSWER: No. 

2021-05-14
* DISCUSS. Independent forward chaining only works for monotonic logic.
* DONE anti-goal (|fact (imdl ...)) becomes anti-requirement to block move hand.
  After (mk.val h attached nil), conditions for anti-requirement are gone. Re-try move.
* DONE. not making a goal icst from a single member (revert pull request #131) https://github.com/IIIM-IS/replicode/pull/154
* DONE. super_goal in new Sim https://github.com/IIIM-IS/replicode/pull/106

2021-05-20
* DONE. Pull request to save inputs for PTPX during pass-through https://github.com/IIIM-IS/replicode/pull/159
* DONE. Try PTPX
  * Creates model with anti-requirement in next frame. (The normal requirement is same frame.)
  * The pre-conditions seem overly broad. "If a hand is at the same position as a cube, then
    trying to pick up anything will fail."
      (fact (icst S1 |[] [H: P: C: cube] : :) T0: T1: : :)
      (|fact (imdl M2 [H: v5: T1: T2:] [T1_RHS: T3:] : :) T1: T2: : :)

2021-06-04
  * DONE. In PTPX, allow models with LHS icst and RHS imdl at the same time https://github.com/IIIM-IS/replicode/pull/161
  * ASTController unexpectedly invalidates a valid input https://github.com/IIIM-IS/replicode/issues/162
  * DONE. In Visualizer, show model deletion.
  * DONE. What steps create model mdl |[] [(|fact (cmd grab [v0:]) v1: v2:) (|fact (imdl M2 [v0: v3: v4: v5:] [v6: v7:]) v4: v5:)] ?
      This was a typo in the code. It should have been filtered out. 
      DONE. Pull request to filter out cmd on requirement LHS https://github.com/IIIM-IS/replicode/pull/163
  * DONE. How does PTPX react to a prediction failure from its own model?
    https://github.com/IIIM-IS/replicode/blob/b7269ab867fd123447bf0306b4b556863bd895c7/r_exec/mdl_controller.h#L135-L137
  * DONE. Try hand-coded more specific alternative to S1 for two things at the same position as hand. Make the example
    keep running long enough to test predictions from the more general and specific PTPX models. See if the more general
    model is eventually removed.
    * find_f_icst only matches once. Temporary inefficient fix to match all.

2021-06-10
  * DONE. binding map in the prediction's mk.rdx https://github.com/IIIM-IS/replicode/pull/120
  * DONE. Pull request: PTPX: Make a candidate model from every matching f_icst https://github.com/IIIM-IS/replicode/pull/165
  * DONE.  PTPX: Add option to always create new cst. It seems to recognize an existing similar one.

2021-06-17
* pong.test: Learn general model for new position.
  * Initial way for pgm to inject efferent command wan't being recognized by CTPX.
* PTPX:
  * Why are strong requirement models not used sometimes?
    * DONE. Pull request for setting forward chaining f_imdl timings from template values https://github.com/IIIM-IS/replicode/pull/166
* Review/merge bug fix pull requests for:
  * DONE. SYNC_HOLD timings https://github.com/IIIM-IS/replicode/pull/118
  * DONE. PTPX: allow models with LHS icst and RHS imdl at the same time https://github.com/IIIM-IS/replicode/pull/161

2021-06-30
* DONE. Visualizer: Checkbox for show requirement predictions. (Let Leonard know.)
* DONE. not sharing timing variables when building the model https://github.com/IIIM-IS/replicode/pull/110
* pong.test
  * DONE. After making mdl_269 (copy of mdl_122), why does it stop from making more copies?
    fact_420 (ball pos) => make ASTController w/ candidate CTPX. fact_446 cmd => mdl 122 make fact_447 (predict ball pos).
      fact_447 => ASTController match target fact_420. ASTController::reduce:138 kill()
  * DONE. CTPX: mdl_269 is the same as mdl_122. Why re-learned? (Was labelled low-priority but now clear.)
    fact_446 cmd => mdl 122 does not predict ball pos, blocked by new bad mdl_168 (not killed yet).
      So the ASTController for the CTPX that makes mdl_269 is not killed (as above).
    But... ModelBase::MEntry::match is broken. When fixed, check_existence does prevent making mdl_269.

2021-07-09
* DONE. Check if the LHS can be an ipgm.
  Yes. Need to update PrimaryMDLController::abduce_simulated_lhs:2038 to start simulated forward
    chaining for a LHS goal ipgm (in addition to LHS cmd)
  Given a goal of the RHS, is the program instantiated? Need a program to intercept the goal ipgm,
    the same as for a goal cmd.
* pong.test
  * DONE: Try to fix ModelBase::MEntry::match. Use the hidden unpacked model where possible.
  * DONE. Motion in X-Y

2021-07-16
* pong.test
  * DONE. For a non-simulated prediction, document the detail of a command input and controller state for the prediction.
  * DONE. Try goal for moving twice.
    The requirement for the second simulated command doesn't match. Still investigating.

2021-07-30
* DONE. MDLController::get_cfd gets the success rate. Is this the only place it's called confidence? (Yes.) Renamed to get_success_rate.
* DONE. Fix bug in issue #29 for !def substitution inside strings https://github.com/IIIM-IS/replicode/pull/167
* DONE. injecting a second icst if there is a different simulation branch https://github.com/IIIM-IS/replicode/pull/160
* DONE. matching all composite state combinations in backward chaining  https://github.com/IIIM-IS/replicode/pull/129
* DONE. NoArgCmdGuardBuilder backward guard https://github.com/IIIM-IS/replicode/pull/115
* DONE. Visualizer: Zoom to item by name.
* DONE. Fix bug in ModelBase::MEntry::match for packed models https://github.com/IIIM-IS/replicode/pull/170
* pong.test
  * The requirement for the second simulated command doesn't match.
    * DONE. In signal, pass a copy of the stored binding map to check_simulated_imdl https://github.com/IIIM-IS/AERA/pull/172
  * DONE. Try goal for using mdl_ball_position twice.

2021-08-05
* hand-grab-sphere to simulate failure of "move first" and commit to "release first"
  * DONE: Make pull request for calling abduce_simulated_imdl after abduce_simulated_lhs

2021-08-12
* DONE. Visualizer: Improve progress window. Set application icon.
* DONE. Slides for workshop demo.
* DONE. hand-grab-sphere to simulate failure of "move first" and commit to "release first"

2021-08-23
* hand-grab-sphere-learn
  * DONE. Make pull request for first running reduction jobs that check strong requirements (non-monotonic) https://github.com/IIIM-IS/AERA/pull/174
  * DONE. Make pull request for limiting the time interval of committed non-simulated command goals https://github.com/IIIM-IS/AERA/pull/175
* Review/merge new functionality pull requests for:
  * DONE. Adding to simulated_requirements_.negative_evidences https://github.com/IIIM-IS/AERA/pull/176

2021-08-26
* hand-grab-sphere-learn
  * DONE. Allow "cube only" anti-requirement model for grab. Babble to unlearn it.

2021-09-02
* hand-grab-sphere-learn
  * DONE: Try injecting a new icst in the next Sim frame.
* sensorimotor-letters
  * DONE. Make 512 fovea patterns, models for move to top-center, bottom-center
  * DONE. Try model "phase out" and "phase in"
      RESULT: Phase out to secondary group works. In auto_focus, need to add secondary group.
      DONE. Pull request to fix SecondaryMDLController::rate_model() https://github.com/IIIM-IS/AERA/pull/177

2021-09-09
* sensorimotor-letters
  * DONE. Test phase in allowing anti-requirements as designed.
    (When we saw the anti-requirements deleted, it was when the main model was relevant.)
* Visualizer
  * DONE. Show disabled prediction from strong requirement.
* hand-grab-sphere-learn
  * DONE. Try "loosening" SYNC_ONCE in M3 so that it will fire M2 for both s and c.
    RESULT: No change with SYNC_PERIODIC.
  * DONE. Make pull request for matching a requirement from the same Sim branch https://github.com/IIIM-IS/AERA/pull/179
* Review/merge new functionality pull requests for:
  * DONE. simulation control in abduce_simulated_lhs https://github.com/IIIM-IS/replicode/pull/111

2021-09-16
* DONE. Send the original Qt animation example
* hand-grab-sphere-learn
  * DONE. Pull request for matching in retrieve_simulated_imdl_bwd from the same Sim branch https://github.com/IIIM-IS/AERA/pull/180
  * DONE. Make pull request for abduce_simulated_lhs already_signalled

2021-09-30
* Visualizer
  * DONE. Show predicted (non-simulated) icst
* Review/merge new functionality pull requests for:
  * DONE. Calling abduce_simulated_imdl after abduce_simulated_lhs https://github.com/IIIM-IS/AERA/pull/173
  * DONE. Abduce_simulated_lhs already_signalled https://github.com/IIIM-IS/AERA/pull/181
  * DONE. Strong requirement to retroactively disable a weak requirement https://github.com/IIIM-IS/AERA/pull/182

2021-10-07
* hand-grab-sphere-learn
  * DONE. Revert pull request #160 https://github.com/IIIM-IS/AERA/pull/183
  * Pull request #175 updated: Now simulations correctly proceed by frame.
  * REVIEWED. Task environment doc

2021-10-14
* Review/merge new functionality pull requests for:
  * DONE. Making an icst in the next frame of a Sim branch https://github.com/IIIM-IS/AERA/pull/185

2021-10-21
* Review/merge new functionality pull requests for:
  * DONE. Limiting the time interval of abduced commands https://github.com/IIIM-IS/AERA/pull/175
  * DONE. Forward chaining from each requirement https://github.com/IIIM-IS/AERA/pull/186

2021-10-28
* Review/merge new functionality pull requests for:
  * DONE. error for reference in a mdl or cst guard https://github.com/IIIM-IS/AERA/pull/191
  * DONE. Creating the primary group before stdin https://github.com/IIIM-IS/AERA/pull/188

2021-11-04
* Review/merge new functionality pull requests for:
  * DONE. PTPX: Make a candidate model from every matching f_icst https://github.com/IIIM-IS/replicode/pull/165
  * DONE. Increment resilience (to learn models in hand-grab-sphere) https://github.com/IIIM-IS/AERA/pull/192
* Review/merge bug fix pull requests for:
  * DONE. Allow an empty string https://github.com/IIIM-IS/AERA/pull/193
* DONE. Review diag_mode_rel_0_1 tags https://github.com/IIIM-IS/replicode/issues?q=is%3Aopen+is%3Aissue+milestone%3Adiag_mode_rel_0_1
* hand-grab-sphere-learn
  * DONE. Change (mk.val h attached nil) to anti-fact
  * DONE. Discuss progress on learning models

2021-11-12
* DONE. Make pull request to update copyright headers. https://github.com/IIIM-IS/AERA/pull/197
* DONE. Check how many objects in hand-grab-sphere https://github.com/IIIM-IS/AERA/issues/128
  Answer: 11,875. (Not close to 65,536.)
* hand-grab-sphere-learn
  * DONE. Change "attached C" to "attached [C]" and "anti-fact to "attached |[]" .
  * DONE. Babble to learn grab and release models.

2021-11-19
* Visualizer
  * DONE. Merge pull request for tool tip hover (Karl)
* DONE. Update the pull request so copyright years have a range. Merge. https://github.com/IIIM-IS/AERA/pull/197
* DONE. Make Correlator branch. Remove Correlator code from master.
* pong
  *DONE. Merge request for the same repeated simulated command https://github.com/IIIM-IS/AERA/pull/200
* Release
  * DONE. Confirm name AERA Diagnostic Mode v0.1 . Commit CHANGELOG (AERA and AERA_Visualizer).
  * DONE. Tag AERA and AERA_Visualizer.
  * DONE. Make dev from master (AERA and AERA_Visualizer). Close the experimental branch.
  * DONE! Make AERA and AERA_Visualizer public.

2021-11-25
* pong
  * OK. Merge pull request to not let old strong requirement disable a weak requirement. https://github.com/IIIM-IS/AERA/pull/202
  * DONE. Make stable over long simulations. (Still need more pull requests.)

2021-12-07
* pong
  * DONE. Make pull request for stability over long simulations with duplicate commands. https://github.com/IIIM-IS/AERA/pull/203
  * DONE. Replace vec3 with separate X and Y. icst as top goal. (Still need more pull requests.)

2021-12-10
* pong
  * DONE. Review/merge pull request for stability over long simulations with duplicate commands. https://github.com/IIIM-IS/AERA/pull/203

2021-12-16
* pong
  * DONE. Make pull request to keep only one copy of identical simulated LHS commands https://github.com/IIIM-IS/AERA/pull/204
* Generality
  * DONE. Investigate separating int from float in Replicode.
    Not convinced it's needed. Integers are small. Opcode for number is special: First bit is 0.
  * DONE. Update issue to propose separating timestamp and duration. https://github.com/IIIM-IS/AERA/issues/138

2021-12-30
* pong
  * DONE. Review/merge pull request to keep only one copy of identical simulated LHS commands https://github.com/IIIM-IS/AERA/pull/204
* Generality
  * DONE. Review/merge pull request to support duration in issue #138. https://github.com/IIIM-IS/AERA/pull/205

2022-01-06
* Generality
  * DONE. Review/merge pull request to implement separating timestamp and duration in issue #138. https://github.com/IIIM-IS/AERA/pull/206

2022-01-21
* DONE. Review/merge pull request to allow ':' in a string https://github.com/IIIM-IS/AERA/pull/207
* Activation and saliency
  * DONE. ball.external: Why are some activation values -1.57772e-30 and -nan? These are less that 0, so is it not active?
    ANSWER: There are different types of View. The View on an icst doesn't use the activation, so it is not initialized.
    View(sync, ijt, sln, res, host, origin, object) // regular view
  * DONE. ball.external: Why are some activation values 1 as expected? (Different initialization code?)
    ANSWER: Yes, different View constructor.
    View(sync, ijt, sln, res, host, origin, object, act); // pgm/mdl view
  * DONE. Make autofocus inject facts and efferent commands into a test group "peripheral1". Are learned models injected there too?
    ANSWER: Yes. Need to add a View from auto_focus to peripheral1. But makes more models (don't know why).
  * DONE. Study test.15.replicode: What is it supposed to show?
    ANSWER: Modified to test saliency thresholds and propagation.
  * DONE Make issue: low_sln_thr sends notifications every frame, not just when it "becomes" below. https://github.com/IIIM-IS/AERA/issues/208

2022-02-04
* DONE. Review/merge pull request to move definition of std_grp to std.replicode https://github.com/IIIM-IS/AERA/pull/212
* DONE. Review bug: Wrong variable binding in program pattern with nested lists https://github.com/IIIM-IS/AERA/issues/211
* DONE. Discuss: abduce_imdl doesn't use parameter "opposite".
* Pong
  * DONE. Add a fovea with move eye command.
* hand-grab-sphere
  DONE. Simplify seed code with emulator state (20% smaller).

2022-02-10
* hand-grab-sphere
  * DONE. Put emulator state in emulator group.
    * DONE. Review issue for can't make a group visible in another group at runtime https://github.com/IIIM-IS/AERA/issues/213 .
    * DONE. Review program to explicitly re-inject from primary to emulator group.
  * Demonstrate injection of mandatory solution to prevent drive failure.
    * DONE. Discuss: Simulation with requirements on drive model in Figure 11 not working.

2022-02-17
* hand-grab-sphere
  * DONE. Demonstrate injection of mandatory solution to prevent drive failure.
  * DONE. Review/merge pull request to switch to SIM_MANDATORY not at the sim root https://github.com/IIIM-IS/AERA/pull/214

2022-02-24
* Visualizer
  * DONE. Show changes to the strength of a model.
    This was already done. "Strength" is really a boolean "strong" - The AERA code changes it from 0 to 1.
* Generality
  * DONE. Confirm that if a model has an anti-requirement which disables a predicting a variable, that CTPX will create a new model to predict the variable in this case.
    Relates to GTPX.

2022-03-03
* hand-grab-sphere
   * DONE. Try CTPX when main prediction is disabled, where grab failure results in holding an "e" of type "error".
   * Make AERA take actions to test candidate PTPX models (instead of explicit babbling).
     * Looking at recognizing conflicting requirement and anti-requirements.

2022-03-10
* hand-grab-sphere
     * DONE. Make pull request to use strong_bm when matching weak requirements.
* Generality
  * Make a list of modes in which a prediction can fail, what the system needs to be able to explain the failure, how the failure modes are layered, and how AERA addresses each one.
    "Causal models that explain failures, if particular models fail to predict, by investigating the potential causes of the failures." - openaera.org
    * Discuss: PTPX "Explain prediction failure" and GTPX "Explain goal achievement". Why not "Explain goal failure"? Maybe "Predict goal success" and that failure invokes PTPX?
    * Discuss: PTPX can find exceptions and make anti-requirement. (fact sphere_and_cube_same_position) -> (|fact (imdl grab)). If failure is due to missing preconditions,
      can PTPX find and add more? E.g.: (|fact power_light_on) -> (|fact (imdl grab)). Requires searching memory of past success or waiting for future success.
    * Discuss: "Measurement error" means the model is good but the conflicting "evidence" is wrong. Need to explain inference errors leading to the wrong measurement.
      Likewise, "Setup error" means the model and result measurement are good but the system was not actually in the prerequisite state used for the prediction. Need to explain and correct.

2022-03-17
* Generality
  * Make a list of modes in which a prediction can fail, what the system needs to be able to explain the failure, how the failure modes are layered, and how AERA addresses each one.
    * DONE. Review draft presentation "Explaining prediction failure".
  * DONE. Confirm backward chaining with (|fact power_light_on) -> (|fact (imdl grab)).
    (mdl |[] []
       (|fact (mk.val H: powered true :) T0: T1: : :)
       (|fact (imdl M2 [H: C: T0: T1:] [T1_RHS: T3:] : :) T0: T1: : :)

2022-03-25
* hand-grab-sphere
   * Make AERA take actions to test candidate PTPX models (instead of explicit babbling).
     * DONE. Review/merge pull request to make sure the strong requirement matches the weak requirement. https://github.com/IIIM-IS/AERA/pull/215
     * DONE. Review/merge pull request for general way for strong requirement to disable a weak requirement. https://github.com/IIIM-IS/AERA/pull/216

2022-04-01
* AERA Visualizer
  * DONE. Fix bug for simulation item placement error https://github.com/IIIM-IS/AERA_Visualizer/issues/34
* DONE. Review/merge pull request for store_requirement to not signal for strong requirement https://github.com/IIIM-IS/AERA/pull/217

2022-04-07
* hand-grab-sphere
  * DONE. Review/merge pull request to recursively search an existing icst for a matching member. https://github.com/IIIM-IS/AERA/pull/218
* Generality
  * Assumptions
    * Eric's Summer School example of seeing a new student https://youtu.be/UnhTiVhSfqo?t=6710
    * assume() does nothing if (is_requirement() || is_reuse() || is_cmd()). Currently, this is all of our examples.  

2022-04-14
* Assumptions
  * DONE. Review/merge pull request for assume_lhs to call EvaluateFWDTimings https://github.com/IIIM-IS/AERA/pull/219
  * DONE. Review/merge pull request for reduce to ignore an input if it is an assumption https://github.com/IIIM-IS/AERA/pull/220

2022-04-28
* Assumptions
  * Make an example which injects an assumption and (wrongly) uses it for prediction failure. Try checking in PredictionMonitor.
    * DONE. After pull request 220, test if an assumption isn't be used to make a possibly conflicting prediction.

2022-05-05
* DONE. Review/merge pull request to inject a simulated imdl from reuse model. https://github.com/IIIM-IS/AERA/pull/223
* DONE. Discuss how to show LHS of reuse model https://github.com/IIIM-IS/AERA_Visualizer/issues/38
* DONE. Discuss issue for how old requirements are removed even though they are needed to make an assumption. https://github.com/IIIM-IS/AERA/issues/222

2022-05-12
* Assumptions
  * DONE. Make pull request to remove unneeded enable_assumptions flag https://github.com/IIIM-IS/AERA/pull/221
* Make Replicode example of CLCC paper Figure 8.
  * M0 and M7 are frame rules!
    "Structure f2 (M7) predicts the invariance of an object X being attached to another H, unless an anti-evidence can be predicted."

2022-05-18
* hand-grab-sphere
  * DONE. Switch "attached" to "holding" for H holding X.
  * DONE. Try frame rule approach from CLCC paper.
    * Result: Loops forever as expected.

2022-06-23
* Prepare interim AERA release diagnostic_mode_v0_2.
  * DONE. Review/merge pull request for copyright 2022 https://github.com/IIIM-IS/AERA/pull/225

2022-06-30
* Prepare interim AERA release diagnostic_mode_v0_2.
  * DONE. Move "one-off" contributors below the "general" contributors.
  * DONE. Show "prediction disabled" for non-simulated anti-requirements  https://github.com/IIIM-IS/AERA_Visualizer/issues/40
  * DONE. Review/merge pull request to add a requirement monitor when abducing goal imdl from a cst. https://github.com/IIIM-IS/AERA/pull/226

2022-07-21
* DONE. Make interim AERA release diagnostic_mode_v0_2.
* DONE. Make Replicode example of CLCC paper Figure 8, simplified to hand-grab-sphere.

2022-08-04
* DONE. Add prerequisite states to CLCC paper Figure 8 to match those in hand-grab-sphere.

2022-08-18
* DONE. Visualizer: Option to show all inputs in the commited simulation branch.
* hand-grab-sphere
  * DONE. Rename the actions after PTPX from "babbling" to "experimenting".

2022-08-25
* hand-grab-sphere
  * Learn re-use model.
    * DONE. Merge pull request to fix the imdl timing problem in PR #166 https://github.com/IIIM-IS/AERA/pull/227
    * DONE. Merge pull request for CTPX to use the default guard builder for a re-use model https://github.com/IIIM-IS/AERA/pull/228

2022-09-01
* DONE. Make pull request to allow [] for empty set not at the end of a line (replace |[]) https://github.com/IIIM-IS/AERA/pull/229
* hand-grab-sphere
  * Make AERA take experimenting actions to test candidate PTPX models (instead of explicit babbling).
    * DONE. Demonstrate output of reason for failure to achieve explicit goal.

2022-09-29
* DONE. Demonstrate not recreating the same deleted model.
* DONE. Merge pull request to fix bug in unpack_hlp https://github.com/IIIM-IS/AERA/pull/230
* DONE. Merge pull request to monitor goals even if a prediction was made https://github.com/IIIM-IS/AERA/pull/231

2022-10-13
* DONE: Merge pull request to fix bug for program deep-structure pattern matching https://github.com/IIIM-IS/AERA/pull/232
* DONE. Merge pull request to inject mk.new for created models https://github.com/IIIM-IS/AERA/pull/233

2022-11-03
* Webots
  * DONE. Continue physics while waiting for command

2022-11-10
* Webots
  * DONE. Get c and s position from the environment [Jeff]
  * DONE. Fix bug: Not finishing when AERA is in Debug configuration [Jeff]
  * DONE. Does AERA need to send the "start" command to Webots? Yes. Make ready command just accept/log a string.

2022-11-17
* Webots
  * DONE. Get holding (s, c, []) from the environment [Jeff]
  * DONE. Use protobuf (need to compile into Webots) [Leonard]

2022-12-01
* DONE. Fix bug to rename "Visulizer" https://github.com/IIIM-IS/AERA_Visualizer/issues/30
* DONE. Review/merge pull request for don't fail evaluation if assignment guard is already bound. https://github.com/IIIM-IS/AERA/pull/236

2022-12-09
* DONE. Use C++ override keyword https://github.com/IIIM-IS/AERA/issues/189
* DONE. Review Chloe's pull request for Zoom To button https://github.com/IIIM-IS/AERA_Visualizer/pull/43

2022-12-15
* DONE. Review pull request to allow shared template timing variables https://github.com/IIIM-IS/AERA/pull/240
* DONE. Close Arash's pull request for reuse models in CTPX (now not needed) https://github.com/IIIM-IS/AERA/pull/238

2023-01-06
* DONE. Update copyright headers for 2023.
* Webots
  * DONE. Put code in IIIM-IS/AERA_Webots [Leonard]
  * DONE. Make pull request for Webots controller to start example. [Jeff] https://github.com/IIIM-IS/AERA_Webots/pull/1

2023-01-12
* Causal process terminology
  * Is using Lisp more clear to show inference process?
  * If a goal state is not the current state, can that be called a "problem"? Attention to actions that "solve the problem"?

2023-01-20
* hand-grab-sphere
  * DONE. Represent sphere position without direct I/O input.
    * (mk.val h rfid s) when hand is at the position of s.
    * Anti-requirement model for failure to position s when s is not reachable.
    * Subgoal for (mk.val s reachable true). Can be achieved by "scanning" the hand and detecting rfid. ("Mandatory" solution.)
    * When (mk.val s reachable true), the anti-requirement model is "counterattacked". (Anti requirement on the anti-requirement)
    * Inject assumption (mk.val s inferred_position 0) from hand position and detected rfid of s.
    * The "counterattack" model remembers the inferred position.
    * Continue to inject the drive. The hand releases c. Artifically move the hand away from s.
    * The rfid of s is not detected, but the "counterattack" model injects the inferred position of s.
    * No "centralized" attention module.

2023-01-27
* GTPX
  * Not used for mk.val https://github.com/IIIM-IS/AERA/blob/8a0a88275d0be8c0b2da12e55e3c16052f379d72/r_exec/pattern_extractor.cpp#L583
* hand-grab-sphere
  * Represent sphere position without direct I/O input.
    * DONE. Review/merge pull request for multiple matches in retrieve_imdl_fwd https://github.com/IIIM-IS/AERA/pull/243

2023-02-03
* DONE. Make issue for PTPX makes an anti-requirement which uses the wrong variable from the cst https://github.com/IIIM-IS/AERA/issues/245
* hand-grab-sphere
  * Represent sphere position without direct I/O input.
    * DONE. Make pull request to return NO_REQUIREMENT if only strong requirements but none match https://github.com/IIIM-IS/AERA/pull/244

2023-02-24
* DONE. Review/merge pull request to solve issue #245 for PTPX makes an anti-requirement which uses the wrong variable from the cst https://github.com/IIIM-IS/AERA/pull/246
* GTPX
  * Try making a goal of icst.
    * DONE. Try adding inputs_ for GTPX.
* hand-grab-sphere
  * Represent sphere position without direct I/O input.
    * DONE. Review/merge pull request to return NO_REQUIREMENT if only strong requirements but none match https://github.com/IIIM-IS/AERA/pull/244

2023-03-03
* DONE. Try interval syntax "a-floating-point-number|a-floating-point-number" and "a-timestamp|a-timestamp"
  RESULT: Not implemented.
* DONE. Discuss intermittent Visualizer crash: Root cause not found.
* hand-grab-sphere
  * DONE. Try moves taking 1000ms to complete. (More realistic, test multi-frame action, compatible with Webots)
    * (Needed to hack PASTController to allow repeated values since the command.)

2023-03-16
* hand-grab-sphere
  * Moves taking 1s to complete.
    * CTPX: Need to extend time span between command and effect.
      * DONE. Try injecting robot signals into a group with longer update period.
        RESULT. It works. The longer period is used for CTPX.

2023-03-24
* hand-grab-sphere
  * DONE. Try injecting the command efferent copy at the time of completion but with the timestamp of original command.
    hand-grab-sphere-learn works when injecting efferent copy at (+ After 99ms) .
* Webots
  * DONE. Get hand-grab-sphere-learn working with Leonard's interface (and a few hacks)

2023-03-31
* Webots
  * DONE. Babble move from 0 learns different models. Check if they make good predictions. [Jeff]
    * DONE: It works. Review/merge pull request to avoid duplicate predictions https://github.com/IIIM-IS/AERA/pull/248
  * DONE. Incorporate Leonard's latest AERA_Webots changes.

2023-04-07
* Webots
  * DONE. Review/merge pull request for min Z value, etc. [Jeff] https://github.com/IIIM-IS/AERA_Webots/pull/2
  * DONE. Review/merge pull request for one step so that Webots initial values are correct [Jeff] https://github.com/IIIM-IS/AERA_Webots/pull/3

2023-04-21
* DONE. In _Mem::run_in_diagnostic_time, factor out code in the main loop as DiagnosticTimeState::step().

2023-04-28
* DONE. Review/merge pull request to implement time interval proposal https://github.com/IIIM-IS/AERA/issues/137  https://github.com/IIIM-IS/AERA/pull/250
  * Solves bug for using the narrowed time interval values in the imdl https://github.com/IIIM-IS/AERA/issues/251
* Webots
  * DONE. Try to increase friction on gripper and objects. [Leonard] https://github.com/IIIM-IS/AERA_Webots/pull/4
  * DONE. Pull request to make Webots aera_us match the AERA fact times. https://github.com/IIIM-IS/AERA_Webots/pull/6

2023-05-08
* Webots
  * DONE. Link to Debug version of Protobuf library. [Leonard] https://github.com/IIIM-IS/AERA/pull/252

2023-05-19
* DONE. Make temporary fix for Visualizer crash. If enabled, skip deleting memory when resizing a vector. Doesn't crash, but leaks memory.
* DONE. Update AERA to make it easier to statically link in AERA_Visualizer.
* Webots
  * DONE. Make pull request to wait until 65 ms to execute command and wait for it to complete. https://github.com/IIIM-IS/AERA_Webots/pull/9

2023-05-25
* DONE. Merge Leonard's AERA_Protobuf submodule update https://github.com/IIIM-IS/AERA/pull/256
* DONE. Make hand-grab-sphere work with (vec [25 0 0]) .
* Webots

2023-06-09
* DONE. Make pull request for bound objects with sub-structures https://github.com/IIIM-IS/AERA/pull/257
* Webots
  * DONE. Update AERA_Webots to use the AERA_Protobuf submodule https://github.com/IIIM-IS/AERA_Webots/pull/10
  * DONE. Put code in usr_operators in a namespace. Implement vec3 div. (No conflict with Windows div.)
  * DONE (side effect). Reset the TCP connection when resetting the Webots simulation
  * Make CTPX work with vec3 for the move model DeltaP.
    * DONE. Add temporary special case in CTPX for vec3. [Jeff]

2023-07-06
* DONE. Merge pull request to fix out-of-bounds error (seen by Chloe) https://github.com/IIIM-IS/AERA/pull/261
* Webots
  * DONE. Make CTPX work with vec3 for the move model DeltaP.

2023-07-13
* DONE. Merge request to fix bug in abstract_f_ihlp (for Arash) https://github.com/IIIM-IS/AERA/pull/262

2023-07-27
* DONE. Merge request for PTPX to accept objects with same "attribute, value" https://github.com/IIIM-IS/AERA/pull/263

2023-08-10
* DONE. Look for the AERA code for removing a model for disuse.
  RESULT: Model view is "forever". I think it is not implemented. Couldn't find this described in the Replicode Tech Report.
* Webots
  * DONE. Try camera [Leonard]

2023-08-18
* DONE. Update "Perceptual Explanation" slide for robot example.
* DONE. Merge Leonard's pull request for decoding Atoms in Visual Studio https://github.com/IIIM-IS/AERA/pull/268
* DONE. Merge Leonard's pull request for generalized operators https://github.com/IIIM-IS/AERA/pull/266
* DONE. Merge Leonard's pull request for multi-dimensional marker values in TCP (Webots) https://github.com/IIIM-IS/AERA/pull/267

2023-08-25
* DONE. Merge request to fix bug initializing CST binding map https://github.com/IIIM-IS/AERA/pull/260
* DONE. Merge request to remove unneded TemplateTimingsUpdater https://github.com/IIIM-IS/AERA/pull/269
* Discuss: Simulation forward chaining vs. argumentation

2023-08-31
DONE. Fix Webots to fix includes for the Eigen library.
DONE. Merge pull request to use microseconds for Timestamp https://github.com/IIIM-IS/AERA/pull/270
* Webots
  * DONE. Webots (occasionally) sends data for rotation which confuses the current example. [Leonard]
  * DONE. This should either include the Eigen library as a submodule, or update the README with instructions to install it. [Leonard]
  * DONE. Generalize CTPX for all strucured types (vec2, vec3, vec [], etc.) [Leonard]

2023-09-08
* DONE. Merge pull request to update projects to SDK 18362 (for Visual Studio 2022). https://github.com/IIIM-IS/AERA/pull/271

next meeting
* Webots
  * In TCPConnection add both client and server versions of establishConnection. (Move TCPConnection to AERA_Protobuf?)
  * Put a tray at the goal position
  * Set position of boxes on initial load to the correct position
  * Align Webots aera_us with AERA time.
  * Use setup command for automatic discovery of AERA objects and commands
  * Get command efferent copy from Webots (move limit to +/- 20) [Maybe in the setup message or command reply. Need more discussion]
  * Try Webots streaming to the Visualize [Chloe]
* hand-grab-sphere
  * Make AERA take experimenting actions to test candidate PTPX models (instead of seed commands).
    * Still need to allow multiple strong requirements in retrieve_imdl.
  * Represent sphere position without direct I/O input.

TODO
* Change (success) to refer to the prediction mk.rdx instead of the prediction. (Affects other code.)
* Make a mk.rdx for (fact (pred (fact (imdl ...)))). (May affect other code that expects the other kind of prediction.)
* PTPX: Learned cst may only have icsts. But using a cst for later model-building requires a non-icst fact. Should icst->contains be recursive? (Need limit.) Or always include a fact in new_cst?
* Pong
  * Add paddle. Make goal for the ball to be at a position which requires moving the paddle to bounce it.
  * Remove cst_ball_position, etc. and learn them.
  * Learn the exception "bounce" model.
* Try commenting out PTPX::reduce:666 if (i->input_ == Opcodes::Cmd)
* Visualizer: Option to position simulation objects by predicted time vs. created time.
* Visualizer: Add an item for prediction reduction, initially hidden.
* Visualizer: Show the time job queue sorted by time.
* If min_sim_time_horizon > 0, how is the behavior different?
* Issue #2: Try to reproduce.
* Issue #25: Reproduce running in real-time, and see if it happens in diagnostic time.

D   C   Demo = demonstrated functionality. Vis = explanation in Visualizer. Comm = code commented. Doc = details in software design document
e V o D
m i m o
o s m c Functionality
------- -------------
Facts / Success
Y _ _ _ Learn models in change targeted pattern extractor (CTPX)
_ _ _ _ Learn models in goal targeted pattern extractor (GTPX) due to unexpected goal achievement
Y Y _ _ Non-simulated icst from facts/icsts
Y Y _ _ Non-simulated prediction of imdl from weak requirement model
Y _ _ _ Rating of weak requirement models
Y Y _ _ Testing and re-activation of models and weak requirement models in the secondary group
Y _ _ _ Use of deleted models to prevent re-creating them
Y Y _ _ Non-simulated prediction of fact from model
Y _ _ _ Non-simulated cmd from non-simulated goal RHS
_ _ _ _ Auto-focus based on active predictions and goals (not pass-through)
Y _ _ _ Views/groups and saliency propagation
Y _ _ _ Simulated prediction of icst from facts/icsts
Y _ _ _ Simulated prediction of imdl from weak requirement model
Y _ _ _ Simulated prediction of fact from model
Y _ _ _ Simulated goal from drive
Y _ _ _ Simulated goal cmd from model
Y _ _ _ Simulated goal requirement imdl from model
Y _ _ _ Simulated goal icst from requirement model
Y _ _ _ Simulated goal facts/icsts from icst
Y _ _ _ Commiting to optional solutions
Anti-facts / Failure
Y _ _ _ Learn strong requirement models (predicted anti-imdl) in prediction targeted pattern extractor (PTPX) due to prediction failure
_ _ _ _ Non-simulated prediction of anti-fact from model (Is such a prediction tested?)
Y _ _ _ Non-simulated prediction of anti-imdl from strong requirement model (to prevent model prediction)
Y _ _ _ Rating of strong requirement models
_ _ _ _ Testing and re-activation of strong requirement models in the secondary group
_ _ _ _ Goal actions to test conflicting weak and strong requirements
_ _ _ _ Simulated anti-goal from opposite match of drive (and starting of new simulation from anti-goal)
Y _ _ _ Simulated prediction of anti-imdl from strong requirement model (to prevent model prediction)
_ _ _ _ Simulated prediction of anti-fact from model (how does this make the simulation proceed?)
_ _ _ _ Conflict resolution of conflicting predictions (fact and anti-fact)
_ _ _ _ Simulated anti-goal of cmd from model with anti-matched RHS
_ _ _ _ Simulated anti-goal requirement imdl from model with anti-matched RHS
_ _ _ _ Simulated anti-goal icst from requirement model with anti-matched RHS
_ _ _ _ Simulated anti-goal facts/icsts from anti-fact icst
Y _ _ _ Commiting to mandatory solutions
