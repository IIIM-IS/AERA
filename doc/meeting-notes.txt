2020-01-05
* DONE? Solve real-time pong.2.goal crash.
  PrimaryMDLController::predict:1430
  PrimaryMDLController::assume_lhs:2113
  CTPX::build_requirement:996
  HLPOverlay::check_fwd_timings:180
  (ModelBase::MEntry::ComputeHashCode:135) Trigger with pong.discrete.cmd.external, cst_y2_minus with grab_hand
  BindingMap::match_fwd_timing:738
* DONE. Fix https://github.com/IIIM-IS/replicode/issues/42
* DONE. decompiled_objects "fact10" is different than fact with OID 10 in the trace.
  https://github.com/IIIM-IS/replicode/pull/44
* DONE. Try temporarily disabling assumptions. PrimaryMDLController::assume:2080
* DONE. pong.discrete.cmd.external: Why does m_y0_plus prediction fail?
  InputLessPGMOverlay::inject_productions:459 injects a (fact (cmd) ...) of zero duration.
  This is used as input to cst_y2_minus instead of the one injected by pgm_cmd_move_y_minus.
  BindingMap::match_timings:712 reduces (fact (icst cst_y2_minus)) to zero duration to match it.
  This makes the (fact (imdl m_y2_minus)) zero duration also.
  Therefore the prediction from the RHS of the model is also zero duration.
    (fact (pred (fact (mk.val p1 position y1 :) 0s:600ms:0us 0s:600ms:0us) ::) ::)
  The PMonitor calls _Fact::match_timings_overlap which fails if no overlap.
  Possible solutions:
    * NO: Make mdl ignore LHS duration and predict RHS with explicit duration. (Requires changing pattern extractor)
	* NO: Make inject_productions offset the instantaneous (fact (cmd ...)) into the future.
	* YES: Make inject_productions give (fact (cmd ...)) a duration.
	* NO: Move responsibility to inject (fact (cmd ...)) from inject_productions to the external environment.
	* NO: In _Fact::match_timings_overlap, special case when one interval is zero duration.
* DONE. Is the failed prediction from the assumption shielded from decreasing mdl confidence? No.

2020-01-09
* DONE. In replicode repository, create doc/meeting-notes.txt
* DONE. Add settings parameter "enable_assumptions". https://github.com/IIIM-IS/replicode/pull/45
* DONE. pong.discrete.cmd.external: From the drive, why doesn't m_y1_plus abduce goals for icst cst_y1_plus?
  Feb 2012: Major update to CSTController::reduce
  https://github.com/IIIM-IS/replicode/commit/3c5b9be5f935d6783fb1d35d74ca7d19ad4be186#diff-0ff725f0ae881cefbad0064fc2eac950R236
  Changed:
    Code *target = goal->get_reference(0)->get_reference(0);
	if (target->code(0).asOpcode() == Opcodes::ICST ...
  to:
    _Fact *goal_target=goal->get_reference(0);
	if (goal_target->code(0).asOpcode() == Opcodes::ICst ...
  There is a missing get_reference(0), so it never matches.
  Also, the following is clearly a bug, using the uninitialized bm:
    P<BindingMap> bm = new BindingMap(bm);
  Thus, the code to create goals from an abduced icst never ran after Feb 2012.
* DONE. HLPBindingMap::init_from_f_ihlp:1011 Fix to get the time stamp structure.
  https://github.com/IIIM-IS/replicode/pull/46
* Need CSTController::inject_goal:449 new View saliency 9999
  How does AERA choose among possible actions?

2020-01-17
* DONE. Make a pull request for the fix to CSTController::reduce. Merged.
  https://github.com/IIIM-IS/replicode/pull/47
* DONE. What was CSTController::inject_goal:449 resilience before the "big commmit" Feb 2012?
  There is code to compute the resilience, but seems to always use 1.
  https://github.com/IIIM-IS/replicode/blob/8260dc91c441c5b586663332741bd85242f3d2d9/r_exec/cst_controller.cpp#L92
  Should we try to use the duration until the goal's fact time stamp?
* DONE. In drive for y1 200ms later, why does it also eject cmd move_y_minus?
  Because extra move commands are ignored, but registered anyway, did a model learn wrongly from that? NO.
  The goal for (mk.val p1 position y1) also matches m_y2_minus, and cst_y2_minus
    abduces the goal (cmd move_y_minus [p1] :), even though position is not y2.
* DONE. Is replicode now making simulations?
  NO. In settings.xml, min_sim_time_horizon==max_sim_time_horizon==0.
  Will change max_sim_time_horizon.
* pong.2.goal.replicode model building.
  ASTController<U>::ASTController:89 target is the premise, i.e. the tpx' target to be "defeated".
  Fix typo in comment: https://github.com/IIIM-IS/replicode/commit/cde840d45a73c2826f7564d8a41b2732ed2ea88f
  CTPX::find_guard_builder "5 forms"
  InputLessPGMOverlay::inject_productions:461 Add GetTimeTolerance or use SYNC_HOLD so it can be a cause.

2020-01-21
* DONE pong.2.goal.replicode: Why does it need the initial speed_y?
  Because the patterns extractor CTPX::reduce needs a "cause", and this is the only fact available.
* CTPX::reduce: Discard inputs that don't share values with the consequent OR target.
  https://github.com/IIIM-IS/replicode/pull/48

2020-01-28
* DONE. Added "glue" output, e.g.
  fact (4652) imdl mdl 106 matches evidence fact (3962) imdl mdl 106
* Wrong: fact_130:(fact (icst cst_105 |[] [p1 y1 y1]) 0s:600ms:0us 0s:700ms:0us)
  Starts from consequent (fact y1_is_a_discrete_position1 0s:600ms:0us 0s:700ms:0us)

2020-01-31
* DONE. Finish gotcha: Documentation omits the 1 at the end of every object definition.
* CSTController::reduce:380 should ++o ? https://github.com/IIIM-IS/replicode/commit/fc5961a4fa9f44d40298381bbdf86f314a9f26ab#diff-0ff725f0ae881cefbad0064fc2eac950R318
* DONE: pong.discrete.cmd.external: When adding fact 119 to fact_127, why is patterns already down to 2 used members?
    Because CSTOverlay::get_offspring transfers(?) from patterns to inputs.
  When building fact 113 icst[96][ 102 108 109 111], why does it use all 4 inputs?
    Because it comes from CSTOverlay(1331) which was never an offspring.
    Why no prediction? Because job 466 deletes model 98, so fact_113 is not used.

2020-02-07
* DONE. Create pull request for CSTController::reduce:380 should ++o
  https://github.com/IIIM-IS/replicode/pull/49
* DEFER. Does replicode v1.1 instantiate a cst from partial inputs?
  Don't know. The code is too different, and can't find tests that use pattern extractor.
* DONE. Make pong.discrete.cmd.external build the same models in diagnostic time.
  CSTOverlay::reduce:277 if (inputs.size() == original_patterns_size) inject_production();
  Almost: mdl 122 makes unbound predictions, e.g. fact_171
* Does pong.discrete.cmd.external use the learned models to abduce from the drive?
  NO. PrimaryMDLController::abduce:1609 abduction_allowed(bm) == false
  Maybe partly due to the bug in scan_variable: https://github.com/IIIM-IS/replicode/pull/50

2020-02-13
* DONE. Opened tech report errata issue https://github.com/IIIM-IS/replicode/issues/54
* DONE. Merged pull request https://github.com/IIIM-IS/replicode/pull/50 .
* DONE. Review and merge https://github.com/IIIM-IS/replicode/pull/52 .
* DONE. Set max_sim_time_horizon to 5000000 us. See how behavior changes.
  ANSWER: Not much change. E.g. fact_558 goal imdl injected just the same.
* DONE. Review and merge https://github.com/IIIM-IS/replicode/pull/53 .
* DONE. In hand-coded model, why doesn't it (goal (fact (imdl)))?
  PrimaryMDLController::abduce:1636 retrieve_imdl_bwd returns NO_R (no requirements)
    -> directly to abduce LHS
  For mdl_98 from CTPX, MDLController constructor sets _is_requirement=WR (weak requirement)
* OK. Review issue to rename for readability https://github.com/IIIM-IS/replicode/issues/55

2020-02-23
* DONE. Merge pull request for readability issue https://github.com/IIIM-IS/replicode/issues/55
* DONE. Review issue to remove unused parameter https://github.com/IIIM-IS/replicode/issues/57
* Changes in pong.discrete.cmd.external to abduce a goal from learned models:
  * Still need pull request https://github.com/IIIM-IS/replicode/pull/48
  * Still need CSTOverlay::reduce:288 to require all inputs for an icst.
  * Offset (fact (cmd)) to allow it to be a cause. https://github.com/IIIM-IS/replicode/pull/59
  * Delay the drive to allow predicting the imdl as a requirement. https://github.com/IIIM-IS/replicode/commit/3339d3a804a32d1692b993777d1da87d3035a787
  * In m_run_position, offset the timestamp of the goal position by 90000us 
    so that v2 in mdl_93 exactly matches 3s:200ms:0us in the requirement
	(imdl mdl_93 [y1 3s:100ms:0us 3s:200ms:0us] [p1 y2 v5]) .
	(Need to find a way to make this flexible.)
  * Force HLPBindingMap::match_bwd_timings to succeed.
    The requirement timestamps 3s:100ms:0us,3s:200ms:0us don't match
	the mdl_93 RHS backward timestamps 3s:200ms:0us,3s:300ms:0us .
	It works if we use the timestamps of f_pattern (the constructed imdl).
  * In HLPOverlay::check_fwd_timings:178, need to evaluate fwd_after
    "v4:(sub v2 0s:80ms:0us)" first because fwd_before 
	"v5:(add v4 0s:30ms:0us)" depends on it.
	In general, there may be dependencies among many guards, so the general solution
	needs multiple passes to bind other assignment variables that may be dependencies.
	Maybe do ScanBWDGuards first and let it bind variables?

2020-02-25
* DONE. Review/merge allowing a reference to an expression https://github.com/IIIM-IS/replicode/pull/58
* REVIEW. pong.discrete.cmd.external: Fix learned model for move_y_minus position1->position2.
  CTPX::reduce: Require each icst component to share values with the target or consequent.

2020-03-12
* DONE. pong.discrete.cmd.external: Increase to 10 positions.
* DONE. In unfixed pong.discrete.cmd.external, when the goal to achieve position y0 is not achieved,
  what does the goal monitor do?
  ANSWER: Makes |fact_845:(|fact (success fact_825 fact_832) ...)
    but no further reduction jobs process it.
* DONE. Is PTPX invoked when a prediction fails?
  ANSWER: Yes, but does nothing. PTPX::reduce needs inputs, but nothing adds them.
  Makes |fact_234:(|fact (success fact_226 fact_232) ...)
  std.replicode:166 Need to set ctpx_on true.
  settings.xml: Need to set tpx_time_horizon?
* DONE. Is GTPX invoked when drive goal succeeds?
  ANSWER: Yes, but does nothing. GTPX::reduce needs inputs, but AutoFocusController::reduce:392
    doesn't call dispatch becuase std.replicode:166 pass_through is true.
	Setting pass_through false: No auto focus, no learned models, no AutoFocus.goals. Still no dispatch.
* DONE. Review/merge fix for getting fwd_after_index https://github.com/IIIM-IS/replicode/pull/63
* DONE. Review/merge fix for accessing controllers array https://github.com/IIIM-IS/replicode/pull/64

2020-03-19
* DONE. MERGED. Add MDLController::retrieve_imdl_bwd use_f_pattern_timings, but don't use yet.
* DONE. MERGED. Pull request: CoreLibrary tabs to spaces https://github.com/IIIM-IS/CoreLibrary/pull/2
* DONE. Review/merge static_cast in class P https://github.com/IIIM-IS/CoreLibrary/pull/3
* DONE. Merge pull request, need to increment iterator https://github.com/IIIM-IS/replicode/pull/53
* DONE. Is GMonitor::commit called?
  ANSWER: Yes, but sim_successes is empty because store_simulated_outcome is never called. 
  * It might be called from GMonitor::reduce but only after calling get_simulation(controller),
	which I can't believe was ever tested because it would crash due to the bug reported in
	https://github.com/IIIM-IS/CoreLibrary/pull/3 .
  * FIXED. Also, the code in store_similated_outcome never adds to sim_successes.optional_solutions . 
    _GMonitor::store_simulated_outcome:112
    (Hard to believe this code was tested.)
  * FIXED. Also, GMonitor::commit:217 uses (*sol).second, not best_sol. (Copy/paste error?)
  * MAYBE NOT A PROBLEM. Also, GMonitor::commit:219 may not use sim_successes.mandatory_solutions if there is no 
    best_sol from sim_successes.optional_solutions .

2020-03-26
* DONE. Review/merge pull request for tabs to spaces https://github.com/IIIM-IS/replicode/pull/69
* DONE. In normal prediction, is there a Sim attached? Does it predict past the next sampling period? Need a drive?
  ANSWER: Apparently, no. The Pred object simulations is empty. The Sim constructor is only called when abducing from the drive.
* DONE. Review merged pull request to rename to sim_time_horizon_factor https://github.com/IIIM-IS/replicode/pull/68
* Review/merge pull request for GMonitor sim_thz https://github.com/IIIM-IS/replicode/pull/70
* More simulation issues:
  * min_sim_time_horizon is really "time allowance for the simulated predictions". PMDLController::get_sim_thz:1118
  * In get_sim_thz, Sim::thz and _GMonitor::sim_thz, "time horizon" means only abduction w/o prediction (min_sim_thz).
  * TopLevelMDLController::abduce_lhs:1228 makes Sim where sim_thz already has subtracted min_sim_thz. Then,
    PrimaryMDLController::abduce:1623 divides this by 2 and subtracts min_sim_thz again.
  * GMonitor::commit:217 bindings belongs to top model, but abduce called on another model - mismatch.

2020-04-02
* DONE. Review/merge std::chrono https://github.com/IIIM-IS/CoreLibrary/pull/5 and https://github.com/IIIM-IS/replicode/pull/71
* DONE. Review/merge pull request for GMonitor sim_thz https://github.com/IIIM-IS/replicode/pull/72
* DONE. Review/merge pull request for if (time_to_live = 0) https://github.com/IIIM-IS/replicode/pull/73
* DONE. Review/merge pull request for Sim sol_before https://github.com/IIIM-IS/replicode/pull/74
* DONE. Review/merge pull request for converting primary_thz https://github.com/IIIM-IS/replicode/pull/75

2020-04-09
* DONE. Review/merge pull requests for member variable underscores https://github.com/IIIM-IS/CoreLibrary/pull/6
  https://github.com/IIIM-IS/replicode/pull/76
  Found unused member variables: _GMonitor::sim_thz_ f_imdl_ and sim_mode_, GTPX::f_imdl_
* DONE. Review/merge pull request to rename to thz_timestamp. https://github.com/IIIM-IS/replicode/pull/77
* DONE. Look at the version of Replicode from Eric's laptop. Is it v1.2? v1.1? Or some intermediate with simulation implemented?
  Laptop "eric_workdir": v1.2 August 1, 2012 0f9b1a4d1948954bbd7f3aa4089d5a4493cc7c76
  Laptop "eric_from_home": v1.1 April 10, 2011 (more or less) 

2020-04-17
* DONE. Pull request for CTPX::reduce icst components.
* DONE. Pull request for CSTController original_patterns_size_.
* DONE. Diagnostic time for v1.1.
* DONE. Add relevant bug fixes from v1.2 to v1.1.
* v1.1 test.1.2011-04-13.v1_0.replicode: Goal for the_right_hand position:
  It generates subgoals but does not appear to be in simulation.
* DONE. Mock up an explanation session.
* DONE. Start a design specification.

2020-04-24
* DONE. Review merge pull request to fix timestamp offset https://github.com/IIIM-IS/CoreLibrary/pull/7
* DONE. Review/merge pull request to parse 1s:100us:0us timestamps https://github.com/IIIM-IS/replicode/pull/80
* DONE. Review/merge pull request for unique created names https://github.com/IIIM-IS/replicode/pull/81
* DONE. Review/merge pull request to decompile references first https://github.com/IIIM-IS/replicode/pull/82
* DONE. Review issue for decompiler VL_PTR error https://github.com/IIIM-IS/replicode/issues/51

2020-04-30
* DONE. Review/merge pull request to update Integration_OpenAI https://github.com/IIIM-IS/Integration_OpenAI/pull/4
* DONE. Review/merge pull request for "using namespace r_comp" https://github.com/IIIM-IS/replicode/pull/84
* Does the compiler prevent redefining an object using the same name?
  ANSWER: No. See the pull request:
  DONE. Review/merge pull request to check redefined labels https://github.com/IIIM-IS/replicode/pull/83
* YES. Can you switch to Visual Studio 2019?

2020-05-07
* Replicode
  * DONE. In console output, include the mk.rdx for program execution (inject).
  * DONE. In console output, include controller OID for new mdl and cst.
  * DONE. In console output, include the mk.rdx for the prediction.
* Visualizer
  * DONE. Add side window for query session. (Solves problem of fact before prediction.)

2020-05-14
* Replicode
  * DONE. In console output, log when storing an object in the cst overlay.
  * DONE. Talk about "Exposed values" for second set in imdl. Change in Replicode language spec?
* Visualizer
  * DONE. Show events at the same timestamp all at once.
  * DONE. Only show program reductions as an explanation for program outputs.
  * DONE. If a template arguments is assigned elsewhere and ignored, change it to a wildcard in Visualizer.

2020-05-22
* Replicode
  * DONE. Gotchas: If a model's guard assigns a variable, the one passed in is ignored.
  * DONE. Moved Gotchas to the README. https://github.com/IIIM-IS/replicode/blob/master/README.md#Gotchas
  * DONE. Review/merge pull request for keep_invalidated_objects https://github.com/IIIM-IS/replicode/pull/85
  * DONE. Review/merge pull request to change | to anti_ in labels https://github.com/IIIM-IS/replicode/pull/86
  * DONE. For success, output the fact success OID:
    0s:300ms:0us fact 75 -> fact 79 success fact 60 pred
* Visualizer
  * DONE. In prediction item, use "Hide iModel", and change "Original Model" to "Show Model"
  * DONE. Put an outbound arrowhead at the beginning of arrows.
  * DONE. Add creation timestamp in gray at upper-right.
  * DONE. Always highlight the LHS red and the RHS green. Include the timestamps.
  * DONE. Add dotted vertical lines and clearly separate the scene into frames.
  * DONE. Don't show a fact until the view activates it.
    For now, only showing auto focus output which correctly appears in the next frame
    (and after the prediction is made).
  
2020-05-27
* Replicode
  * DONE. Review/merge pull request for debug_stream_file_path https://github.com/IIIM-IS/replicode/pull/87
  * DONE. Log inject and eject to the debug stream.
* Visualizer
  * DONE. Split scene into panels with in-memory objects, and "timeless" models/cst.
  * DONE. For new items, change blink color to green.
  * DONE. On hover, instead of blinking, change just change the color to blue.
  * DONE. Use Visualizer with pong.2.goal. 
  * DONE. Put injected facts and ejected commands at the top.
  * DONE. Make auto focus of same mk.val line up horizontally.
    This is hacked for this example. We need a more general layout algorithm.
  * YES, OPTIONAL. Should draw an arrow from the auto focus fact to the injected fact?

2020-06-01
* Visualizer
  * DONE. Highlight connected arrows when hovering on an item.
  * DONE. When the visualizer starts, show a dialog to select the settings.xml file (with defaults).
  * DONE. Check boxes for types of items to show.
  * DONE. Base the prediction on the reduction, and mention the input cause in the explanation.
  * DONE. Add explanation for the imdl template values.
    * Include the requirement along with the input in the mdl_63 reduction marker?
    * Also need a reduction marker for mdl_64.

2020-06-04
* Replicode
  * DONE. Review/merge pull request to change prediction VL_PTR to wildcard https://github.com/IIIM-IS/replicode/pull/88
  * DONE. In settings.xml, rename TestConfiguration? YES. AERAConfiguration.
* Visualizer
  * DONE. Change "right-hand side" to RHS, same for LHS.
  * DONE. Make minimal pong seed program.
  * DONE. Fix bug for arrow to hidden item.
  * DONE. Make a version of the seed without ejecting the start command.

2020-06-09
* Replicode
  * DONE. Make branch without-pull-requests-48-59-78-79 .
  * DONE. Merge pull requests 48, 59, 78 and 79.
  * DONE. Create INSTALL.md.

2020-06-15
* Replicode
  * DONE. settings.xml: Make diagnostic the default. Add comments for using real time.
  * DONE. settings.xml: Default 1000 milliseconds.
  * DONE. settings.xml: ignore_named_objects no.
  * DONE. INSTALL.md: Document uncommenting WITH_DEBUG_OID.
  * DONE. Rename Test project to AERA.
  * DONE. Rename folders V1.1 and V1.2 to replicode_v1.1 and replicode_v1.2.
  * DONE. pong.external.replicode: Change start pgm command to (cmd ready ["pong"])
* Visualizer
  * DONE. Use the registry to remember the last settings.xml file path.

2020-06-19
* Replicode
  * DONE. Review/merge pull request to include the "ejection fact" in the program mk.rdx https://github.com/IIIM-IS/replicode/pull/89
  * DONE. Rename Test to AERA. In CHANGELOG, say how to get history.
  * DONE. Rename debug_out.txt to runtime_out.txt
  * DONE. Rename pong.external to ball.external
  * DONE. Tag a release AERA_v0.2
* Visualizer
  * DONE. Make the windows fit the user's screen.
  * DONE. Copyright headers.
  * DONE. Tag a release AERA_Visualizer_v0.2

2020-07-22
* Visualizer
  * DONE. Review/close Arni's issue for screenshot https://github.com/IIIM-IS/AERA_Visualizer/issues/1
  * DONE. Add progress window while reading runtime_out.txt.
  * DONE. Add item for Prediction Failure anti-fact.
* Replicode
  * DONE. Use OUTPUT_LINE everywhere to avoid mangling output together.
  * DONE. Real time ball.external.replicode: Predicion failure for small continuous value difference.
  * DONE. Review/merge pull request for is_alive check https://github.com/IIIM-IS/replicode/pull/93
  * DONE. Review/merge pull request to fix GMonitor SUCCESS_OBJ bug https://github.com/IIIM-IS/replicode/pull/90
  * DONE. Review/merge pull request to use a copy of the binding map in retrieve_imdl_bwd https://github.com/IIIM-IS/replicode/pull/92
  * DONE. Use ont instead of ent for discrete positions https://github.com/IIIM-IS/replicode/commit/fa69f5e1d431dbf49ef49ea611aca80ac7272aba
Simulator
  * OK. abduce_simulated_lhs: Also start forward simuation: predict_simulated_evidence

2020-07-28
* DONE. Review/merge change goal definition to (goal a-fact an-actor a-simulation). Add basic (sim mode thz). https://github.com/IIIM-IS/replicode/pull/94
* DONE. Add goal and sim changes to the errata.
* DONE. Close pull request to not take simulated goals as program input https://github.com/IIIM-IS/replicode/pull/91

2020-07-31
* DONE. Update all std.replicode to include (sim ...) definition and (goal : : sim), including Integration_OpenAI.
* DONE. Make bug issue: Uwarranted cast to (Goal*) in _Fact::get_goal(). https://github.com/IIIM-IS/replicode/issues/95

2020-08-04
* DONE. Review/merge pull request: retrieve_imdl_bwd to use match_fwd https://github.com/IIIM-IS/replicode/pull/96

2020-08-13
* DONE. Review/merge pull request: Add is_sim operator https://github.com/IIIM-IS/replicode/pull/101
* DONE. Review/merge pull request: Don't abort if chaining_allowed https://github.com/IIIM-IS/replicode/pull/102
* DONE. Review/merge pull request: Start forward chaining in the simulator https://github.com/IIIM-IS/replicode/pull/103
* NOT YET. Review/merge pull request: In abduce, use the current model controller for the new Sim https://github.com/IIIM-IS/replicode/pull/104
* Discuss issue: Predict members of simulated future composite states https://github.com/IIIM-IS/replicode/issues/97
  Try making the auto focus controller predict the same fact until the external environment contradicts it.

2020-08-25
* DONE. Rename sol to solution.
* Try simulator to re repeatedly restart the simulation from the solution under the root.
  NO. Instead, do backward chaining once, then keep the "deepest goal" during forward chaining:
  "When the abduction steps stop, predictions are simulated, i.e. they are marked with the solution markers of the goals that 
   could not be simulated (the deepest goals)."

2020-09-03
* DONE. Review/merge pull request for don't reduce sim->get_thz() in simulated backward chaining https://github.com/IIIM-IS/replicode/pull/105
* Try one command two frames later. Use a goal time interval for "now to end of goal frame"? YES

2020-09-17
* DONE. Merge pending pull requests into experimental side branch. Tell Arash and Leonard to use it.
* Visualizer: For the simulation visualizer, need:
  * DONE. need pull request for (pred) to add list of (sim). Pull request #109
  * need Sim to use model view instead of controller
    Difficult. Can we keep the controller in the C++ object, but use the model in the decompiled (sim) code?
      YES, TRY IT.

next meeting
* Review/merge pull request for full (sim) syntax https://github.com/IIIM-IS/replicode/pull/117
* Review/merge pull request for list of sims in (pred) https://github.com/IIIM-IS/replicode/pull/109
* Review/merge pull request for super_goal in new Sim https://github.com/IIIM-IS/replicode/pull/106
* Review/merge pull request: Keep the same abduced sim object in forward simulation. https://github.com/IIIM-IS/replicode/pull/98
* Review/merge pull request for template timings in abduce_imdl https://github.com/IIIM-IS/replicode/pull/107
* Review/merge pull request for matchesAnySuperGoal in simulated backward chaining https://github.com/IIIM-IS/replicode/pull/108
* Review/merge pull request to not share timing variables when building the model https://github.com/IIIM-IS/replicode/pull/110
* Review/merge pull request for simulation control in abduce_simulated_lhs https://github.com/IIIM-IS/replicode/pull/111
* Review/merge pull request for is_out_of_range(now) in retrieve_simulated_imdl_fwd https://github.com/IIIM-IS/replicode/pull/113
* Review/merge pull request for GMonitor::commit() calling abduce_no_simulation https://github.com/IIIM-IS/replicode/pull/114
* Review/merge pull request for NoArgCmdGuardBuilder backward guard https://github.com/IIIM-IS/replicode/pull/115
* Review/merge pull request for check_simulated_imdl in SRMonitor::signal https://github.com/IIIM-IS/replicode/pull/116

TODO
* Try integer positions. It should learn models like position n to n+1, and an exception at end-of-travel.
  Need to make PTPX learning on failed prediction work.
* Visualizer: Show prediction failure.
* When a failed model is in the secondary group and the pattern extractor learns a model from new inputs, does it check if it's the same as the failed model?
* Keep the controller in the C++ object, but use the model in the decompiled (sim) code. Include all extra Sim fields.
* pull request for overlapping SYNC_HOLD timings in auto focus
* How to ensure that stored requirements are from the same simulation branch?
* In prediction monitor, on failure check again at the end of the predicted period.
* Visualizer: Add an item for prediction reduction, initially hidden.
* Visualizer: Use uniform spacing for each frame, adjustable.
* Visualizer: Ability to launch Replicode from the Visualizer.
* Make a mk.rdx for (fact (pred (fact (imdl ...)))). (May affect other code that expects the other kind of prediction.)
* Change (success) to refer to the prediction mk.rdx instead of the prediction. (Affects other code.)
* Visualizer: Show the time job queue sorted by time.
* Document methods, starting with those related to the simulator.
* If min_sim_time_horizon > 0, how is the behavior different?
* In babbling, issue a goal for a position, an "unrelated" speed_x, and move the position there. Is GTPX invoked?
* Decompiler error for VL_PTR in imdl https://github.com/IIIM-IS/replicode/issues/51
* Treat move commands at the same time step as impulses and have them accumulate?
* Issue #2: Try to reproduce.
* Issue #25: Reproduce running in real-time, and see if it happens in diagnostic time.
* Run pong.2.goal.replicode in real time and reproduce/isolate crash. Post issue. Depends on SYNC_PERIODIC change to SYNC_HOLD.
